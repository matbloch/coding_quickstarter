#*********************************#
#	 array functions
#*********************************#

# sum
a = np.arange(12).reshape((3,2,2))
sum = a.sum()

# maxima
maxima = np.amax(x)
maxima_axis = np.amax(a, axis=0)

#-------- ros image maxima
np.amax(myimg, axis=0) # maximas along x axis

# results in the same:
calcmax = []
def myfunction( x ):
	peakind = np.amax(x)
	calcmax.append(peakind)

for column in myimg.T:
	myfunction(column)
	
# -------- MISC
# find indices by value
np.argwhere(array == 1)


indices_lower = self.img < 0
indices_upper = self.img > 1
self.img[indices_lower] = 0
self.img[indices_upper] = 1

zer_axis = [3,5,2,63]
one_axis = 0
# select from each subarray the 0-th element end set it to 1337
rgbArray[zero_axis, one_axis][..., 0] = 1337

#*********************************#
#	 matrix operations
#*********************************#

>>> c = np.matrix( [[1,2,3],[4,5,6],[7,8,9]])
>>> c
matrix([[1, 2, 3],
        [4, 5, 6],
        [7, 8, 9]])

# transpose
c.T

# inverse
c.I


# multiplication
>>> d = np.matrix([[1], [2], [3]])
>>> d
matrix([[1],
        [2],
        [3]])

>>> c*d
matrix([[14],
        [32],
        [50]])
		
#*********************************#
#	 Using arrays as lists
#*********************************#

my_list = np.zeros(100, dtype=object)
my_list[10] = 1337
my_list[[1,3,5,3]] = ['some', 'object']
